This patch allow that the ELSED's build command correctly detects our version
of python and OpenCV, so we can successfully build the python bindings.
--- ELSED/CMakeLists.txt.orig 2023-11-21 10:42:25.953573592 +0100
+++ ELSED/CMakeLists.txt      2023-11-21 10:43:55.444995604 +0100
@@ -5,7 +5,8 @@ set(CMAKE_CXX_STANDARD 14)

 # Import OpenCV
-find_package(OpenCV REQUIRED)
+find_package(OpenCV REQUIRED PATHS $ENV{OpenCV_LOCATION} NO_DEFAULT_PATH)
 message(STATUS "OpenCV_FOUND: " ${OpenCV_FOUND})
 message(STATUS "OpenCV_INCLUDE_DIRS: " ${OpenCV_INCLUDE_DIRS})
 message(STATUS "OpenCV_LIBS: " ${OpenCV_LIBS})
+set(OpenCV_LIBS opencv_features2d opencv_imgproc opencv_stitching opencv_calib3d opencv_flann opencv_ml opencv_videoio opencv_core opencv_highgui opencv_objdetect opencv_video opencv_dnn opencv_imgcodecs opencv_photo)
 
@@ -22,8 +22,13 @@ add_executable(elsed_main src/main.cpp)
 target_link_libraries(elsed_main elsed ${OpenCV_LIBS})

+set(PYTHON_LIBRARY $ENV{PYTHON_LIBRARY})
+set(PYTHON_INCLUDE_DIR $ENV{PYTHON_INCLUDE_DIR})
+find_package(PythonLibs REQUIRED)
+include_directories(${PYTHON_INCLUDE_DIRS})
+
 # Create the python library using pybind11
 add_subdirectory(pybind11)
 pybind11_add_module(pyelsed src/PYAPI.cpp)
-target_link_libraries(pyelsed PRIVATE ${OpenCV_LIBS} elsed)
+target_link_libraries(pyelsed PRIVATE elsed ${PYTHON_LIBRARIES} ${OpenCV_LIBS})
 target_compile_definitions(pyelsed PRIVATE VERSION_INFO=${EXAMPLE_VERSION_INFO})